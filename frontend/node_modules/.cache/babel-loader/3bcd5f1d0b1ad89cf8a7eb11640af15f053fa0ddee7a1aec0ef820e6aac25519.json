{"ast":null,"code":"function validation(values) {\n  console.log(\"From validation\" + values.username);\n  let errors = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{6,}$/;\n  if (values.username === \"\") {\n    errors.username = \"Username should not be empty\";\n    console.log();\n  } else {\n    errors.username = \"\";\n  }\n  if (values.email === \"\") {\n    errors.email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    errors.email = \"Email didn't match\";\n  } else {\n    errors.email = \"\";\n  }\n  if (values.password === \"\") {\n    errors.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    errors.password = \"Password didn't match\";\n  } else {\n    errors.password = \"\";\n  }\n  return errors;\n}\nexport default validation;","map":{"version":3,"names":["validation","values","console","log","username","errors","email_pattern","password_pattern","email","test","password"],"sources":["/Users/krishnachikhale/Documents/Aish_React_Project/Blog_App/frontend/src/Pages/SignupValidation.js"],"sourcesContent":["function validation(values) {\n    console.log(\"From validation\" + values.username)\n    let errors = {}\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{6,}$/\n    \n    if(values.username === \"\") {\n        errors.username = \"Username should not be empty\"\n        console.log()\n    } else {\n        errors.username = \"\"\n    }\n\n   \n    if(values.email === \"\") {\n        errors.email = \"Email should not be empty\"\n       } \n       else if(!email_pattern.test(values.email)) {\n        errors.email = \"Email didn't match\"\n       } \n       else {\n        errors.email = \"\"\n       }\n       \n       if(values.password === \"\") {\n        errors.password = \"Password should not be empty\"\n        }\n        else if (!password_pattern.test(values.password)) {\n        errors.password =  \"Password didn't match\"\n        }   \n        else {\n        errors.password = \"\"\n        }\n       return errors\n\n}\n\nexport default validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGF,MAAM,CAACG,QAAQ,CAAC;EAChD,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAGN,MAAM,CAACG,QAAQ,KAAK,EAAE,EAAE;IACvBC,MAAM,CAACD,QAAQ,GAAG,8BAA8B;IAChDF,OAAO,CAACC,GAAG,CAAC,CAAC;EACjB,CAAC,MAAM;IACHE,MAAM,CAACD,QAAQ,GAAG,EAAE;EACxB;EAGA,IAAGH,MAAM,CAACO,KAAK,KAAK,EAAE,EAAE;IACpBH,MAAM,CAACG,KAAK,GAAG,2BAA2B;EAC3C,CAAC,MACI,IAAG,CAACF,aAAa,CAACG,IAAI,CAACR,MAAM,CAACO,KAAK,CAAC,EAAE;IAC1CH,MAAM,CAACG,KAAK,GAAG,oBAAoB;EACpC,CAAC,MACI;IACJH,MAAM,CAACG,KAAK,GAAG,EAAE;EAClB;EAEA,IAAGP,MAAM,CAACS,QAAQ,KAAK,EAAE,EAAE;IAC1BL,MAAM,CAACK,QAAQ,GAAG,8BAA8B;EAChD,CAAC,MACI,IAAI,CAACH,gBAAgB,CAACE,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,EAAE;IAClDL,MAAM,CAACK,QAAQ,GAAI,uBAAuB;EAC1C,CAAC,MACI;IACLL,MAAM,CAACK,QAAQ,GAAG,EAAE;EACpB;EACD,OAAOL,MAAM;AAEpB;AAEA,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}